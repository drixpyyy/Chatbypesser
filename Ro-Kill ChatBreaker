local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Ro-Kill ChatBypasser",
	LoadingTitle = "Rayfield Interface Suite",
	LoadingSubtitle = "V1",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "Ro-Kill ChatBypasser Loaded",
		FileName = "Big Hub"
	},
	KeySystem = false, -- Set this to true to use their key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		SaveKey = true,
		Key = "ABCDEF"
	}
})

Rayfield:Notify("Title Example", "Content/Description Example", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Section Example")

local Button = Tab:CreateButton({
	Name = "sends a type of unicode that I(drixpy) found and breaks chat",
	Callback = function()
local args = {
    [1] = "‚Äâ",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
	end,
})

local Button = Tab:CreateButton({
	Name = "(„Å£‚óî‚ó°‚óî)„Å£ ‚ô• hangg yourself ‚ô•",
	Callback = function()
local args = {
    [1] = "(„Å£‚óî‚ó°‚óî)„Å£ ‚ô• hangg yourself ‚ô•",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
	end,
})



local Label = Tab:CreateLabel("this was actually made by Drixpyyyy ü§ë")

local Paragraph = Tab:CreateParagraph({Title = "sexter morgan", Content = "nigger morgan"})


local Dropdown = Tab:CreateDropdown({
	Name = "Dropdown Example",
	Options = {"I LOVE NIGGERS","I HATE NIGGERS"},
	CurrentOption = "Option 1",
	Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Option)
	  	  -- The function that takes place when the selected option is changed
    	  -- The variable (Option) is a string for the value that the dropdown was changed to
	end,
})

local Button = Tab:CreateButton({
	Name = "Close UI(Permently closes it(you cant use K to reopen it",
	Callback = function()
		Rayfield:Destroy()
	end,
})

-- Extras

-- getgenv().SecureMode = true -- Only Set To True If Games Are Detecting/Crashing The UI

-- Rayfield:Destroy() -- Destroys UI

-- Rayfield:LoadConfiguration() -- Enables Configuration Saving

-- Section:Set("Section Example") -- Use To Update Section Text

-- Button:Set("Button Example") -- Use To Update Button Text

-- Toggle:Set(false) -- Use To Update Toggle

-- Slider:Set(10) -- Use To Update Slider Value

-- Label:Set("Label Example") -- Use To Update Label Text

-- Paragraph:Set({Title = "Paragraph Example", Content = "Paragraph Example"}) -- Use To Update Paragraph Text

-- Keybind:Set("RightCtrl") -- Keybind (string) -- Use To Update Keybind

-- Dropdown:Set("Option 2") -- The new option value -- Use To Update/Set New Dropdowns
